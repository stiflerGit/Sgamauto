# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: driversdb.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='driversdb.proto',
  package='',
  syntax='proto2',
  serialized_pb=_b('\n\x0f\x64riversdb.proto\"\x17\n\x03\x41\x43K\x12\x10\n\x08_result_\x18\x01 \x01(\t\"W\n\x04Test\x12\x0c\n\x04_id_\x18\x01 \x02(\t\x12\x11\n\t_alc_lvl_\x18\x02 \x02(\r\x12\x13\n\x0b_timestamp_\x18\x03 \x02(\x04\x12\x19\n\x08_driver_\x18\x04 \x02(\x0b\x32\x07.Driver\"q\n\x06\x44river\x12\x1e\n\x07_known_\x18\x01 \x02(\x0e\x32\r.Driver.Known\x12\x0c\n\x04_id_\x18\x02 \x01(\t\x12\x0e\n\x06_name_\x18\x03 \x01(\t\x12\x0f\n\x07_photo_\x18\x04 \x02(\x0c\"\x18\n\x05Known\x12\x07\n\x03YES\x10\x00\x12\x06\n\x02NO\x10\x01\x32G\n\tInsurance\x12\x18\n\x07\x41nalize\x12\x05.Test\x1a\x04.ACK\"\x00\x12 \n\rTrainerUpdate\x12\x07.Driver\x1a\x04.ACK\"\x00')
)



_DRIVER_KNOWN = _descriptor.EnumDescriptor(
  name='Known',
  full_name='Driver.Known',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='YES', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NO', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=222,
  serialized_end=246,
)
_sym_db.RegisterEnumDescriptor(_DRIVER_KNOWN)


_ACK = _descriptor.Descriptor(
  name='ACK',
  full_name='ACK',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='_result_', full_name='ACK._result_', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19,
  serialized_end=42,
)


_TEST = _descriptor.Descriptor(
  name='Test',
  full_name='Test',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='_id_', full_name='Test._id_', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='_alc_lvl_', full_name='Test._alc_lvl_', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='_timestamp_', full_name='Test._timestamp_', index=2,
      number=3, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='_driver_', full_name='Test._driver_', index=3,
      number=4, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=44,
  serialized_end=131,
)


_DRIVER = _descriptor.Descriptor(
  name='Driver',
  full_name='Driver',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='_known_', full_name='Driver._known_', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='_id_', full_name='Driver._id_', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='_name_', full_name='Driver._name_', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='_photo_', full_name='Driver._photo_', index=3,
      number=4, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _DRIVER_KNOWN,
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=133,
  serialized_end=246,
)

_TEST.fields_by_name['_driver_'].message_type = _DRIVER
_DRIVER.fields_by_name['_known_'].enum_type = _DRIVER_KNOWN
_DRIVER_KNOWN.containing_type = _DRIVER
DESCRIPTOR.message_types_by_name['ACK'] = _ACK
DESCRIPTOR.message_types_by_name['Test'] = _TEST
DESCRIPTOR.message_types_by_name['Driver'] = _DRIVER
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ACK = _reflection.GeneratedProtocolMessageType('ACK', (_message.Message,), dict(
  DESCRIPTOR = _ACK,
  __module__ = 'driversdb_pb2'
  # @@protoc_insertion_point(class_scope:ACK)
  ))
_sym_db.RegisterMessage(ACK)

Test = _reflection.GeneratedProtocolMessageType('Test', (_message.Message,), dict(
  DESCRIPTOR = _TEST,
  __module__ = 'driversdb_pb2'
  # @@protoc_insertion_point(class_scope:Test)
  ))
_sym_db.RegisterMessage(Test)

Driver = _reflection.GeneratedProtocolMessageType('Driver', (_message.Message,), dict(
  DESCRIPTOR = _DRIVER,
  __module__ = 'driversdb_pb2'
  # @@protoc_insertion_point(class_scope:Driver)
  ))
_sym_db.RegisterMessage(Driver)



_INSURANCE = _descriptor.ServiceDescriptor(
  name='Insurance',
  full_name='Insurance',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=248,
  serialized_end=319,
  methods=[
  _descriptor.MethodDescriptor(
    name='Analize',
    full_name='Insurance.Analize',
    index=0,
    containing_service=None,
    input_type=_TEST,
    output_type=_ACK,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='TrainerUpdate',
    full_name='Insurance.TrainerUpdate',
    index=1,
    containing_service=None,
    input_type=_DRIVER,
    output_type=_ACK,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_INSURANCE)

DESCRIPTOR.services_by_name['Insurance'] = _INSURANCE

# @@protoc_insertion_point(module_scope)
